# Generated by Django 5.0 on 2025-02-26 19:41

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0002_tag'),
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('province', models.CharField(blank=True, max_length=500, null=True)),
                ('district', models.CharField(blank=True, max_length=500, null=True)),
                ('sector', models.CharField(blank=True, max_length=500, null=True)),
                ('cell', models.CharField(blank=True, max_length=500, null=True)),
                ('village', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('latitude', models.FloatField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid latitude (-90 to 90).', regex='^-?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$')])),
                ('longitude', models.FloatField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid longitude (-180 to 180).', regex='^-?((1[0-7]\\d)|(\\d{1,2}))(\\.\\d+)?$')])),
                ('views', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.category')),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='places', to='base.tag')),
            ],
            options={
                'verbose_name_plural': 'Places',
            },
        ),
    ]
